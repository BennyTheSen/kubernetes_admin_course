We have deployed a simple web application. Inspect the PODs and Services
   kubectl get services -o wide

What is the current color of the web application?
   --> blue

Run the script named curl-test.sh to send multiple requests to test the web application. Take a note of the output.
   ./curl-test.sh -> Hello, Application Version: v1 ; Color: blue OK

Inspect the deployment and identify the number of PODs deployed by it
   kubectl get deployments -o wide --> 4

What container image is used to deploy the applications?
   kubectl get deployments -o wide --> kodekloud/webapp-color:v1

Inspect the deployment and identify the current strategy
   kubectl describe deployments frontend --> RollingUpdate

If you were to upgrade the application now what would happen?
   upgraded few at a time

Let us try that. Upgrade the application by setting the image on the deployment to 'kodekloud/webapp-color:v2'
   kubectl edit deployments frontend

Run the script curl-test.sh again. Notice the requests now hit both the old and newer versions. However none of them fail.
   ./curl-test.sh --> Hello, Application Version: v2 ; Color: green OK

Up to how many PODs can be down for upgrade at a time
Consider the current strategy settings and number of PODs - 4
   --> 1

Change the deployment strategy to 'Recreate'
   kubectl edit deployments frontend

Upgrade the application by setting the image on the deployment to 'kodekloud/webapp-color:v3'
   kubectl edit deployments frontend

Run the script curl-test.sh again. Notice the failures. Wait for the new application to be ready. Notice that the requests now do not hit both the versions
    ./curl-test.sh